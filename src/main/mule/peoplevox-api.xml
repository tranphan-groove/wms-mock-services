<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:apikit-soap="http://www.mulesoft.org/schema/mule/apikit-soap"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/apikit-soap http://www.mulesoft.org/schema/mule/apikit-soap/current/mule-apikit-soap.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<flow name="pvx-soap-flow" doc:id="4226e2e0-3a98-4e4c-b35e-a06f3431c290" >
		<http:listener doc:name="Listener" doc:id="d29550ae-8c29-4841-8239-df26fff75bdf" config-ref="HTTP_Listener_config" path="/tfaQa3012/resources/integrationservicev4.asmx" allowedMethods="POST"/>
		<ee:transform doc:name="Set Variable - templateName" doc:id="16180b66-5768-4d90-ae80-9624e7c86410" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable resource="dw/variables/pvx-save-data-templateName.dwl" variableName="templateName" />
			</ee:variables>
		</ee:transform>
		<choice doc:name="Choice" doc:id="33db3f06-f536-4d35-82c1-e3babf7b6748" >
			<when expression="#[['Sales Orders', 'Sales Order Items', 'Customers'] contains vars.templateName]">
				<logger level="INFO" doc:name="INFO: START" doc:id="a40c995c-be58-42b0-9fe9-d39d76ce6d83" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.info')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.start')&#10;var logMessage = tracePoint ++ &quot;: PeopleVox has received &quot; ++ vars.templateName&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, payload, null, correlationId, null, attributes)]" category="ck-support-info-monitoring"/>
				<flow-ref doc:name="Flow pvx-soap-save-data-subflow" doc:id="c9c6514f-44da-4b2f-b813-3ae962925baf" name="pvx-soap-save-data-subflow"/>
				<logger level="INFO" doc:name="NFO: END" doc:id="2c8b2b5c-68f8-4611-96b8-565207675af4" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.info')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.end')&#10;var logMessage = tracePoint ++ &quot;: PeopleVox has inserted &quot; ++ vars.templateName ++ &quot; into DB&quot;&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, payload, null, correlationId, null, attributes)]" category="ck-support-info-monitoring"/>
			</when>
			<when expression="#[vars.templateName == 'Mulesoft - Despatched items by package v3']">
				<logger level="INFO" doc:name="INFO: START" doc:id="a8cb97d2-01bd-44fc-aded-942e2c0187c4" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.info')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.start')&#10;var logMessage = tracePoint ++ &quot;: PeopleVox has received a get report request&quot;&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, payload, null, correlationId, null, attributes)]" category="ck-support-info-monitoring"/>
				<choice doc:name="Choice" doc:id="b6afb72b-e3b6-47e6-ab81-80dce6381728" >
					<when expression="#[p('peoplevox.fulfillment') == 'true']">
						<flow-ref doc:name="Flow pvx-soap-get-report-data-subflow" doc:id="f5c4fb5a-7db8-4a1a-9433-4a5da0f54122" name="pvx-soap-get-report-data-subflow" />
					</when>
					<otherwise >
						<ee:transform doc:name="Filter Payload" doc:id="7a0b356c-cff3-47cf-ac31-98bb44d029cd" >
							<ee:message >
								<ee:set-payload resource="dw/transformations/pvx-non-fulfillment-filter-payload.dwl" />
							</ee:message>
						</ee:transform>
					</otherwise>
				</choice>
				<logger level="INFO" doc:name="INFO: END" doc:id="9613309d-7156-4ad9-b1fb-4b3fc8653249" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.info')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.end')&#10;var logMessage = tracePoint ++ &quot;: PeopleVox has returned a report&quot;&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, payload, null, correlationId, null, attributes)]" category="ck-support-info-monitoring"/>
			</when>
		</choice>
	</flow>
	<sub-flow name="pvx-soap-save-data-subflow" doc:id="f132fe55-566f-493a-ab33-1e82ed605c8e" >
		<ee:transform doc:name="Set Variable - saveDataContent" doc:id="a541a917-2d93-417e-a901-6f0fe85fce07">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable resource="dw/variables/pvx-save-data-saveDataContent.dwl" variableName="saveDataContent" />
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Set Varable - tableName" doc:id="256ec832-f89c-4feb-b739-dae1c9f17347">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable resource="dw/variables/pvx-get-table-name.dwl" variableName="tableName" />
			</ee:variables>
		</ee:transform>
		<db:bulk-insert doc:name="Bulk insert" doc:id="f1090605-d4bd-43cd-8229-33e60e91c07d" config-ref="Database_Config" target="dbRes">
			<db:bulk-input-parameters ><![CDATA[#[%dw 2.0
output application/json
---
vars.saveDataContent map ((item) -> {
    data: write(item,'application/json')
})]]]></db:bulk-input-parameters>
			<db:sql ><![CDATA[#["INSERT INTO " ++ vars.tableName ++ " (data) VALUES (:data)"]]]></db:sql>
		</db:bulk-insert>
		<ee:transform doc:name="Transform Message" doc:id="42454e97-075d-42d7-a692-5e8488964b29">
			<ee:message>
				<ee:set-payload resource="dw/transformations/pvx-save-data-response.dwl" />
			</ee:message>
		</ee:transform>
		<choice doc:name="Choice" doc:id="fe607994-e019-41c0-99b5-cfd66637ebea">
			<when expression="#[vars.templateName == 'Sales Order Items']" >
				<async doc:name="Async" doc:id="f951a739-6a53-4d46-bf55-35a7ee8e6342" maxConcurrency="${outbound.maxConcurrency}">
					<choice doc:name="Choice" doc:id="17f75f5c-0800-4618-ad91-34560666912f">
					<when expression="#[p('peoplevox.inventory') == 'true']">
							<foreach doc:name="For Each" doc:id="d453962b-196a-4fbd-aee6-ba0c7ca17009" collection="#[vars.saveDataContent]">
						<flow-ref doc:name="Flow pvx-inventory-availability-flow" doc:id="ce5f3d68-8b2c-48e9-8109-719996dce4ae" name="pvx-inventory-availability-flow" />
						<flow-ref doc:name="Flow pvx-inventory-incremental-flow" doc:id="b358d925-2de5-4611-ba9b-5b11427be76b" name="pvx-inventory-incremental-flow" />
					</foreach>
						</when>
				</choice>
				</async>
			</when>
			<when expression="#[vars.templateName == 'Sales Orders']">
				<async doc:name="Async" doc:id="7803b779-a5dd-4899-8992-a91dee38c8ab" maxConcurrency="${outbound.maxConcurrency}">
					<choice doc:name="Choice" doc:id="72360f10-adb8-4101-af2d-5762b8cc38a2" >
						<when expression="#[p('peoplevox.statusChange') == 'true']">
							<foreach doc:name="For Each" doc:id="3f5f13e3-9306-4500-9848-d74582a3ca18" collection="#[vars.saveDataContent]">
						<flow-ref doc:name="Flow pvx-status-change-flow" doc:id="1b4d99e6-a7b8-451e-9126-7baa545f4ddb" name="pvx-status-change-flow" />
					</foreach>
						</when>
					</choice>
				</async>
			</when>
		</choice>
	</sub-flow>
	<sub-flow name="pvx-soap-get-report-data-subflow" doc:id="5d97f2e6-5bd8-475f-b718-3aae81abc1d4" >
		<ee:transform doc:name="Set Variable - searchClauseTimestamps and searchClauseRPLN" doc:id="476be670-2a1c-4e4e-b7e1-0b20001b7aa8">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable resource="dw/variables/pvx-fulfillment-searchClauseTimestamps.dwl" variableName="searchClauseTimestamps" />
				<ee:set-variable resource="dw/variables/pvx-fulfillment-searchClauseRPLN.dwl" variableName="searchClauseRPLN" />
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Set Variable - getReportSQLQuery" doc:id="9e0e9eaf-3c91-4ef5-9c49-ee9155b49e31" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable resource="dw/variables/pvx-getReportSQLQuery.dwl" variableName="getReportSQLQuery" />
			</ee:variables>
		</ee:transform>
		<db:select doc:name="Select" doc:id="c99737eb-f271-4918-9367-123fac3da835" config-ref="Database_Config">
			<db:sql ><![CDATA[#[vars.getReportSQLQuery]]]></db:sql>
		</db:select>
		<ee:transform doc:name="Filter Payload" doc:id="8a74a9a1-6da1-4321-be8c-4057d40d0601">
			<ee:message>
				<ee:set-payload resource="dw/transformations/pvx-fulfillment-filter-payload.dwl" />
			</ee:message>
		</ee:transform>
	</sub-flow>
	<flow name="pvx-inventory-availability-flow" doc:id="0f10d616-7697-442d-99d6-d6d980678621" >
		<ee:transform doc:name="Set Variable - correlationId" doc:id="e9be4c00-8ca3-478a-87d5-f445bac43994">
			<ee:message />
			<ee:variables>
				<ee:set-variable resource="dw/variables/correlationId.dwl" variableName="correlationId" />
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Set Variable - inventoryAvailabilityQueryParams" doc:id="5d80f769-b43f-4e61-8a35-3d459254743f">
			<ee:message>
			</ee:message>
			<ee:variables>
					<ee:set-variable resource="dw/variables/pvx-inventoryAvailabilityQueryParams.dwl" variableName="inventoryAvailabilityQueryParams" />
			</ee:variables>
		</ee:transform>
		<logger level="DEBUG" doc:name="DEBUG: BEFORE_REQUEST" doc:id="de5776f7-b762-4006-b699-9d5fed4ca9c3" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.debug')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.beforeRequest')&#10;var logMessage = tracePoint ++ &quot;: PeopleVox is sending an availability inventory request - &quot; ++ (payload.SalesOrderNumber default &quot;&quot;) ++ &quot;-&quot; ++ (payload.ItemCode default &quot;&quot;)&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, vars.inventoryAvailabilityQueryParams, null, correlationId, {correlationId: vars.correlationId}, attributes)]" category="ck-support-debug-monitoring"/>
			<http:request method="GET" doc:name="Request inventory availability" doc:id="c4a5e210-46fd-4f5a-8ccb-3811fbdb5507" config-ref="blazeMeter_HTTP_Request_configuration" path="/australia/p-inventory/v1-0/api/inventory/availability" target="httpRes">
				<http:headers><![CDATA[#[output application/java
---
{
	"X-Correlation-ID" : vars.correlationId default ""
}]]]></http:headers>
			<http:query-params><![CDATA[#[vars.inventoryAvailabilityQueryParams]]]></http:query-params>
			</http:request>
		<logger level="DEBUG" doc:name="DEBUG: AFTER_REQUEST" doc:id="3689c191-1479-48e7-8df7-afe81a707aa1" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.debug')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.afterRequest')&#10;var logMessage = tracePoint ++ &quot;: PeopleVox has sent an availability inventory request - &quot; ++ (payload.SalesOrderNumber default &quot;&quot;) ++ &quot;-&quot; ++ (payload.ItemCode default &quot;&quot;)&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, vars.inventoryAvailabilityQueryParams, null, correlationId, {correlationId: vars.correlationId}, attributes)]" category="ck-support-debug-monitoring"/>
			<error-handler >
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="2927a40a-9acb-4c1f-839f-a0f9b3745370" >
					<logger level="ERROR" doc:name="ERROR: EXCEPTION" doc:id="86e97d79-7a0b-414a-8300-b6b04ad3068a" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.error')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.exception')&#10;var logMessage = tracePoint ++ &quot;: PeopleVox encountered an error while sending an availability inventory request - &quot; ++ (payload.SalesOrderNumber default &quot;&quot;) ++ &quot;-&quot; ++ (payload.ItemCode default &quot;&quot;)&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, vars.inventoryAvailabilityQueryParams, error, correlationId, {correlationId: vars.correlationId}, attributes)]" category="ck-support-error-monitoring"/>
				</on-error-continue>
			</error-handler>
	</flow>
	<flow name="pvx-inventory-incremental-flow" doc:id="3e99de13-a9a6-429c-83cc-856f8a0512bd" >
		<ee:transform doc:name="Set Variable - correlationId" doc:id="a0a3960e-942f-4fe8-8aa4-a4e51c8670f7">
			<ee:message />
			<ee:variables>
				<ee:set-variable resource="dw/variables/correlationId.dwl" variableName="correlationId" />
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Set Variable - inventoryIncrementalQueryParams" doc:id="7763d995-2985-4544-a48d-f84bbc3ae03a">
			<ee:message>
			</ee:message>
			<ee:variables>
					<ee:set-variable resource="dw/variables/pvx-inventoryIncrementalQueryParams.dwl" variableName="inventoryIncrementalQueryParams" />
			</ee:variables>
		</ee:transform>
		<logger level="DEBUG" doc:name="DEBUG: BEFORE_REQUEST" doc:id="912a9bdf-7e0d-4531-ba71-4399aab31936" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.debug')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.beforeRequest')&#10;var logMessage = tracePoint ++ &quot;: PeopleVox is sending an incremental inventory request - &quot; ++ (payload.SalesOrderNumber default &quot;&quot;) ++ &quot;-&quot; ++ (payload.ItemCode default &quot;&quot;)&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, vars.inventoryIncrementalQueryParams, null, correlationId, {correlationId: vars.correlationId}, attributes)]" category="ck-support-debug-monitoring"/>
			<http:request method="GET" doc:name="Request inventory incremental" doc:id="24eb4ee2-e3a1-4332-9238-b64c40ead8d0" config-ref="blazeMeter_HTTP_Request_configuration" path="/australia/p-inventory/v1-0/api/inventory/incremental" target="httpRes">
				<http:headers><![CDATA[#[output application/java
---
{
	"X-Correlation-ID" : vars.correlationId default ""
}]]]></http:headers>
			<http:query-params><![CDATA[#[vars.inventoryIncrementalQueryParams]]]></http:query-params>
			</http:request>
		<logger level="DEBUG" doc:name="DEBUG: AFTER_REQUEST" doc:id="ce67a910-c15e-4dd1-b45a-a40647210c53" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.debug')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.afterRequest')&#10;var logMessage = tracePoint ++ &quot;: PeopleVox has sent an incremental inventory request - &quot; ++ (payload.SalesOrderNumber default &quot;&quot;) ++ &quot;-&quot; ++ (payload.ItemCode default &quot;&quot;)&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, vars.inventoryIncrementalQueryParams, null, correlationId, {correlationId: vars.correlationId}, attributes)]" category="ck-support-debug-monitoring"/>
			<error-handler >
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="1036a03f-fab6-4947-9a33-85c62f06284c" >
					<logger level="ERROR" doc:name="ERROR: EXCEPTION" doc:id="f598c312-7f4a-4f2b-b3cf-b05de2fb8148" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.error')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.exception')&#10;var logMessage = tracePoint ++ &quot;: PeopleVox encountered an error while sending an incremental inventory request - &quot; ++ (payload.SalesOrderNumber default &quot;&quot;) ++ &quot;-&quot; ++ (payload.ItemCode default &quot;&quot;)&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, vars.inventoryIncrementalQueryParams, error, correlationId, {correlationId: vars.correlationId}, attributes)]" category="ck-support-error-monitoring"/>
				</on-error-continue>
			</error-handler>
	</flow>
	<flow name="pvx-status-change-flow" doc:id="f55f35af-03f0-4325-a23c-9c6ceba82565" >
		<ee:transform doc:name="Set Variable - correlationId" doc:id="d8ea9b3b-b9a0-4ef6-8e50-bbc7b403bca4">
				<ee:message />
				<ee:variables>
					<ee:set-variable resource="dw/variables/correlationId.dwl" variableName="correlationId" />
				</ee:variables>
			</ee:transform>
		<ee:transform doc:name="Set Variable - statusChangeQueryParams and statusChangeBody" doc:id="64877458-dfa8-42f7-9df5-e74186d3bb81">
			<ee:message>
			</ee:message>
			<ee:variables>
					<ee:set-variable resource="dw/variables/pvx-statusChangeBody.dwl" variableName="statusChangeBody" />
					<ee:set-variable resource="dw/variables/pvx-statusChangeQueryParams.dwl" variableName="statusChangeQueryParams" />
			</ee:variables>
		</ee:transform>
		<logger level="DEBUG" doc:name="DEBUG: BEFORE_REQUEST" doc:id="1edf4926-67b9-4a2e-b91b-ec3bdaf19127" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.debug')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.beforeRequest')&#10;var logMessage = tracePoint ++ &quot;: PeopleVox is sending a status change request - &quot; ++ (payload.SalesOrderNumber default &quot;&quot;)&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, vars.statusChangeBody, null, correlationId, {correlationId: vars.correlationId}, attributes)]" category="ck-support-debug-monitoring"/>
		<http:request method="POST" doc:name="Request status change" doc:id="490555f0-2411-46e2-8a3a-563e2684ed87" config-ref="blazeMeter_HTTP_Request_configuration" path="/au/p-api-co-pvx-os-statusevents/v1/api/statusevents" target="httpRes">
				<http:body><![CDATA[#[vars.statusChangeBody]]]></http:body>
				<http:headers><![CDATA[#[output application/java
---
{
	"X-Correlation-ID" : vars.correlationId default ""
}]]]></http:headers>
				<http:query-params><![CDATA[#[vars.statusChangeQueryParams]]]></http:query-params>
			</http:request>
		<logger level="DEBUG" doc:name="DEBUG: AFTER_REQUEST" doc:id="2ee376f4-bac6-48a4-b6f9-3dbb7b0f8484" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.debug')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.afterRequest')&#10;var logMessage = tracePoint ++ &quot;: PeopleVox has sent a status change request - &quot; ++ (payload.SalesOrderNumber default &quot;&quot;)&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, vars.statusChangeBody, null, correlationId, {correlationId: vars.correlationId}, attributes)]" category="ck-support-debug-monitoring"/>
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="bf39b795-dc90-4949-82f1-bd6604bcbb1d" >
						<logger level="ERROR" doc:name="ERROR: EXCEPTION" doc:id="53fa207c-acff-469e-8b45-dbdb6cd5005d" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.error')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.exception')&#10;var logMessage = tracePoint ++ &quot;: PeopleVox encountered an error while sending a status change request - &quot; ++ (payload.SalesOrderNumber default &quot;&quot;)&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, vars.statusChangeBody, error, correlationId, {correlationId: vars.correlationId}, attributes)]" category="ck-support-error-monitoring"/>
					</on-error-continue>
				</error-handler>
	</flow>
</mule>
