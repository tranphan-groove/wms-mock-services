<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:apikit-soap="http://www.mulesoft.org/schema/mule/apikit-soap"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/apikit-soap http://www.mulesoft.org/schema/mule/apikit-soap/current/mule-apikit-soap.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<flow name="pvx-soap-flow" doc:id="4226e2e0-3a98-4e4c-b35e-a06f3431c290" >
		<http:listener doc:name="Listener" doc:id="d29550ae-8c29-4841-8239-df26fff75bdf" config-ref="HTTP_Listener_config" path="/tfaQa3012/resources/integrationservicev4.asmx" allowedMethods="POST"/>
		<ee:transform doc:name="Set Variable - templateName" doc:id="16180b66-5768-4d90-ae80-9624e7c86410" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable resource="dw/variables/pvx-save-data-templateName.dwl" variableName="templateName" />
			</ee:variables>
		</ee:transform>
		<choice doc:name="Choice" doc:id="33db3f06-f536-4d35-82c1-e3babf7b6748" >
			<when expression="#[['Sales Orders', 'Sales Order Items', 'Customers'] contains vars.templateName]">
				<logger level="INFO" doc:name="INFO: START" doc:id="a40c995c-be58-42b0-9fe9-d39d76ce6d83" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.info')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.start')&#10;var logMessage = &quot;START: PeopleVox has received &quot; ++ vars.templateName&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, payload, null, correlationId, vars, attributes)]" />
				<flow-ref doc:name="Flow pvx-soap-save-data-subflow" doc:id="c9c6514f-44da-4b2f-b813-3ae962925baf" name="pvx-soap-save-data-subflow"/>
				<logger level="INFO" doc:name="NFO: END" doc:id="2c8b2b5c-68f8-4611-96b8-565207675af4" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.info')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.end')&#10;var logMessage = &quot;END: PeopleVox has written &quot; ++ vars.templateName ++ &quot; to file&quot;&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, payload, null, correlationId, vars, attributes)]" />
			</when>
			<when expression="#[vars.templateName == 'Mulesoft - Despatched items by package v3']">
				<logger level="INFO" doc:name="INFO: START" doc:id="a8cb97d2-01bd-44fc-aded-942e2c0187c4" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.info')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.start')&#10;var logMessage = &quot;START: PeopleVox has received a get report request&quot;&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, payload, null, correlationId, vars, attributes)]" />
				<flow-ref doc:name="Flow pvx-soap-get-report-data-subflow" doc:id="f5c4fb5a-7db8-4a1a-9433-4a5da0f54122" name="pvx-soap-get-report-data-subflow"/>
				<logger level="INFO" doc:name="INFO: END" doc:id="9613309d-7156-4ad9-b1fb-4b3fc8653249" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.info')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.end')&#10;var logMessage = &quot;END: PeopleVox has returned a report&quot;&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, payload, null, correlationId, vars, attributes)]" />
			</when>
		</choice>
	</flow>
	<sub-flow name="pvx-soap-save-data-subflow" doc:id="f132fe55-566f-493a-ab33-1e82ed605c8e" >
		<ee:transform doc:name="Set Variable - saveDataContent" doc:id="a541a917-2d93-417e-a901-6f0fe85fce07">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable resource="dw/variables/pvx-save-data-saveDataContent.dwl" variableName="saveDataContent" />
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Set Varable - tableName" doc:id="256ec832-f89c-4feb-b739-dae1c9f17347">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable resource="dw/variables/pvx-get-table-name.dwl" variableName="tableName" />
			</ee:variables>
		</ee:transform>
		<db:bulk-insert doc:name="Bulk insert" doc:id="f1090605-d4bd-43cd-8229-33e60e91c07d" config-ref="Database_Config" target="dbRes">
			<db:bulk-input-parameters ><![CDATA[#[%dw 2.0
output application/json
---
vars.saveDataContent map ((item) -> {
    data: write(item,'application/json')
})]]]></db:bulk-input-parameters>
			<db:sql ><![CDATA[#["INSERT INTO " ++ vars.tableName ++ " (data) VALUES (:data)"]]]></db:sql>
		</db:bulk-insert>
		<ee:transform doc:name="Transform Message" doc:id="42454e97-075d-42d7-a692-5e8488964b29">
			<ee:message>
				<ee:set-payload resource="dw/transformations/pvx-save-data-response.dwl" />
			</ee:message>
		</ee:transform>
		<choice doc:name="Choice" doc:id="fe607994-e019-41c0-99b5-cfd66637ebea">
			<when expression="#[vars.templateName == 'Sales Order Items']" >
				<async doc:name="Async" doc:id="f951a739-6a53-4d46-bf55-35a7ee8e6342" >
					<ee:transform doc:name="Wait after finish flow" doc:id="5b9242e4-b0bd-4907-a153-599800a4453a" >
						<ee:message >
						</ee:message>
						<ee:variables >
							<ee:set-variable resource="dw/variables/waitAfterFinishFlow.dwl" variableName="wait" />
						</ee:variables>
					</ee:transform>
					<flow-ref doc:name="Flow pvx-inventory-subflow" doc:id="601cb466-52f8-4b9c-8d90-d0ff1001c185" name="pvx-inventory-subflow"/>
				</async>
			</when>
			<when expression="#[vars.templateName == 'Sales Orders']">
				<async doc:name="Async" doc:id="7803b779-a5dd-4899-8992-a91dee38c8ab" >
					<ee:transform doc:name="Wait after finish flow" doc:id="05b0c231-1a9b-4d02-837f-acd4fa7de304" >
						<ee:message />
						<ee:variables >
							<ee:set-variable resource="dw/variables/waitAfterFinishFlow.dwl" variableName="wait" />
						</ee:variables>
					</ee:transform>
					<flow-ref doc:name="Flow pvx-status-change-subflow" doc:id="1b4d99e6-a7b8-451e-9126-7baa545f4ddb" name="pvx-status-change-subflow"/>
				</async>
			</when>
		</choice>
	</sub-flow>
	<sub-flow name="pvx-soap-get-report-data-subflow" doc:id="5d97f2e6-5bd8-475f-b718-3aae81abc1d4" >
		<ee:transform doc:name="Set Variable - searchClauseTimestamps and searchClauseRPLN" doc:id="476be670-2a1c-4e4e-b7e1-0b20001b7aa8">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable resource="dw/variables/pvx-fulfillment-searchClauseTimestamps.dwl" variableName="searchClauseTimestamps" />
				<ee:set-variable resource="dw/variables/pvx-fulfillment-searchClauseRPLN.dwl" variableName="searchClauseRPLN" />
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Set Variable - getReportSQLQuery" doc:id="9e0e9eaf-3c91-4ef5-9c49-ee9155b49e31" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable resource="dw/variables/pvx-getReportSQLQuery.dwl" variableName="getReportSQLQuery" />
			</ee:variables>
		</ee:transform>
		<db:select doc:name="Select" doc:id="c99737eb-f271-4918-9367-123fac3da835" config-ref="Database_Config">
			<db:sql ><![CDATA[#[vars.getReportSQLQuery]]]></db:sql>
		</db:select>
		<ee:transform doc:name="Filter Payload" doc:id="8a74a9a1-6da1-4321-be8c-4057d40d0601">
			<ee:message>
				<ee:set-payload resource="dw/transformations/pvx-fulfillment-filter-payload.dwl" />
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="pvx-inventory-subflow" doc:id="bd243e9a-b37d-4926-9720-e393c0461669" >
		<foreach doc:name="For Each" doc:id="15d5cb7d-f29a-4be5-bbf2-503869f9dab2" collection="#[vars.saveDataContent]">
			<ee:transform doc:name="Set Variable - correlationId" doc:id="92984d5e-564a-45a5-8deb-5539f4845ff6">
				<ee:message />
				<ee:variables>
					<ee:set-variable resource="dw/variables/correlationId.dwl" variableName="correlationId" />
				</ee:variables>
			</ee:transform>
			<flow-ref doc:name="Flow pvx-inventory-availability-subflow" doc:id="84d667d9-eee2-4df4-8335-173067568063" name="pvx-inventory-availability-subflow"/>
			<flow-ref doc:name="Flow pvx-inventory-incremental-subflow" doc:id="6e31b690-f107-4ad7-ac7b-f86d45aec0f0" name="pvx-inventory-incremental-subflow"/>
		</foreach>
	</sub-flow>
	<sub-flow name="pvx-inventory-availability-subflow" doc:id="0f10d616-7697-442d-99d6-d6d980678621" >
		<ee:transform doc:name="Set Variable - inventoryAvailabilityQueryParams" doc:id="5d80f769-b43f-4e61-8a35-3d459254743f">
			<ee:message>
			</ee:message>
			<ee:variables>
					<ee:set-variable resource="dw/variables/pvx-inventoryAvailabilityQueryParams.dwl" variableName="inventoryAvailabilityQueryParams" />
			</ee:variables>
		</ee:transform>
		<http:request method="GET" doc:name="Request inventory availability" doc:id="c4a5e210-46fd-4f5a-8ccb-3811fbdb5507" config-ref="blazeMeter_HTTP_Request_configuration" path="/australia/p-inventory/v1-0/api/inventory/availability" target="httpRes">
				<http:headers ><![CDATA[#[output application/java
---
{
	"X-Correlation-ID" : vars.correlationId default ""
}]]]></http:headers>
			<http:query-params><![CDATA[#[vars.inventoryAvailabilityQueryParams]]]></http:query-params>
			</http:request>
		<logger level="INFO" doc:name="INFO: AFTER_REQUEST" doc:id="3689c191-1479-48e7-8df7-afe81a707aa1" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.info')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.afterRequest')&#10;var logMessage = &quot;AFTER_REQUEST: PeopleVox has sent an availability inventory request - &quot; ++ (payload.SalesOrderNumber default &quot;&quot;) ++ &quot;-&quot; ++ (payload.ItemCode default &quot;&quot;)&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, payload, null, correlationId, (vars - &quot;rootMessage&quot;), attributes)]" />
		<ee:transform doc:name="Wait between requests" doc:id="1b171714-d01b-4691-adf6-711738e17f5a">
				<ee:message />
				<ee:variables>
					<ee:set-variable resource="dw/variables/waitBetweenRequests.dwl" variableName="wait" />
				</ee:variables>
			</ee:transform>
	</sub-flow>
	<sub-flow name="pvx-inventory-incremental-subflow" doc:id="3e99de13-a9a6-429c-83cc-856f8a0512bd" >
		<ee:transform doc:name="Set Variable - inventoryIncrementalQueryParams" doc:id="7763d995-2985-4544-a48d-f84bbc3ae03a">
			<ee:message>
			</ee:message>
			<ee:variables>
					<ee:set-variable resource="dw/variables/pvx-inventoryIncrementalQueryParams.dwl" variableName="inventoryIncrementalQueryParams" />
			</ee:variables>
		</ee:transform>
		<http:request method="GET" doc:name="Request inventory incremental" doc:id="24eb4ee2-e3a1-4332-9238-b64c40ead8d0" config-ref="blazeMeter_HTTP_Request_configuration" path="/australia/p-inventory/v1-0/api/inventory/incremental" target="httpRes">
				<http:headers ><![CDATA[#[output application/java
---
{
	"X-Correlation-ID" : vars.correlationId default ""
}]]]></http:headers>
			<http:query-params><![CDATA[#[vars.inventoryIncrementalQueryParams]]]></http:query-params>
			</http:request>
		<logger level="INFO" doc:name="INFO: AFTER_REQUEST" doc:id="ce67a910-c15e-4dd1-b45a-a40647210c53" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.info')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.afterRequest')&#10;var logMessage = &quot;AFTER_REQUEST: PeopleVox has sent an incremental inventory request - &quot; ++ (payload.SalesOrderNumber default &quot;&quot;) ++ &quot;-&quot; ++ (payload.ItemCode default &quot;&quot;)&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, payload, null, correlationId, (vars - &quot;rootMessage&quot;), attributes)]" />
		<ee:transform doc:name="Wait between requests" doc:id="1c5d0cce-1be4-475b-905e-ae796bf57314">
				<ee:message />
				<ee:variables>
					<ee:set-variable resource="dw/variables/waitBetweenRequests.dwl" variableName="wait" />
				</ee:variables>
			</ee:transform>
	</sub-flow>
	<sub-flow name="pvx-status-change-subflow" doc:id="f55f35af-03f0-4325-a23c-9c6ceba82565" >
		<foreach doc:name="For Each" doc:id="2903f790-df78-453a-aed1-8b0ce7a40a2c" collection="#[vars.saveDataContent]">
			<ee:transform doc:name="Set Variable - correlationId" doc:id="d8ea9b3b-b9a0-4ef6-8e50-bbc7b403bca4">
				<ee:message />
				<ee:variables>
					<ee:set-variable resource="dw/variables/correlationId.dwl" variableName="correlationId" />
				</ee:variables>
			</ee:transform>
			<ee:transform doc:name="Set Variable - statusChangeQueryParams and statusChangeBody" doc:id="64877458-dfa8-42f7-9df5-e74186d3bb81">
			<ee:message>
			</ee:message>
			<ee:variables>
					<ee:set-variable resource="dw/variables/pvx-statusChangeBody.dwl" variableName="statusChangeBody" />
					<ee:set-variable resource="dw/variables/pvx-statusChangeQueryParams.dwl" variableName="statusChangeQueryParams" />
			</ee:variables>
		</ee:transform>
			<http:request method="POST" doc:name="Request status change" doc:id="490555f0-2411-46e2-8a3a-563e2684ed87" config-ref="blazeMeter_HTTP_Request_configuration" path="/au/p-api-co-pvx-os-statusevents/v1/api/statusevents" target="httpRes" >
				<http:body ><![CDATA[#[vars.statusChangeBody]]]></http:body>
				<http:headers ><![CDATA[#[output application/java
---
{
	"X-Correlation-ID" : vars.correlationId default ""
}]]]></http:headers>
				<http:query-params ><![CDATA[#[vars.statusChangeQueryParams]]]></http:query-params>
			</http:request>
			<logger level="INFO" doc:name="INFO: AFTER_REQUEST" doc:id="2ee376f4-bac6-48a4-b6f9-3dbb7b0f8484" message="#[%dw 2.0&#10;import modules::CustomLoggerModule&#10;output application/json&#10;var priority = p('json.logger.priority.info')&#10;var flowName = flow.name&#10;var tracePoint = p('json.logger.tracePoint.afterRequest')&#10;var logMessage = &quot;AFTER_REQUEST: PeopleVox has sent a status change request - &quot; ++ (payload.SalesOrderNumber default &quot;&quot;)&#10;---&#10;CustomLoggerModule::generateLogger(priority, flowName, tracePoint, logMessage, payload, null, correlationId, (vars - &quot;rootMessage&quot;), attributes)]" />
			<ee:transform doc:name="Wait between requests" doc:id="82a1c4c1-e8d4-424d-9aa3-76d9da2148d7" >
				<ee:message />
				<ee:variables >
					<ee:set-variable resource="dw/variables/waitBetweenRequests.dwl" variableName="wait" />
				</ee:variables>
			</ee:transform>
		</foreach>
	</sub-flow>
</mule>
